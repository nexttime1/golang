// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.9.0
// source: duo.proto

package duo_grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *VideoRequest) Reset() {
	*x = VideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_duo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoRequest) ProtoMessage() {}

func (x *VideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_duo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoRequest.ProtoReflect.Descriptor instead.
func (*VideoRequest) Descriptor() ([]byte, []int) {
	return file_duo_proto_rawDescGZIP(), []int{0}
}

func (x *VideoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type VideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *VideoResponse) Reset() {
	*x = VideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_duo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoResponse) ProtoMessage() {}

func (x *VideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_duo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoResponse.ProtoReflect.Descriptor instead.
func (*VideoResponse) Descriptor() ([]byte, []int) {
	return file_duo_proto_rawDescGZIP(), []int{1}
}

func (x *VideoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *OrderRequest) Reset() {
	*x = OrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_duo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequest) ProtoMessage() {}

func (x *OrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_duo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequest.ProtoReflect.Descriptor instead.
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return file_duo_proto_rawDescGZIP(), []int{2}
}

func (x *OrderRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_duo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_duo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_duo_proto_rawDescGZIP(), []int{3}
}

func (x *OrderResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_duo_proto protoreflect.FileDescriptor

var file_duo_proto_rawDesc = []byte{
	0x0a, 0x09, 0x64, 0x75, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x22, 0x22, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x0d, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x22, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0x4c, 0x0a, 0x0b, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x04, 0x4c, 0x6f, 0x6f, 0x6b,
	0x12, 0x18, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x4b, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x03, 0x42, 0x75, 0x79, 0x12, 0x18, 0x2e,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x64, 0x75, 0x6f, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_duo_proto_rawDescOnce sync.Once
	file_duo_proto_rawDescData = file_duo_proto_rawDesc
)

func file_duo_proto_rawDescGZIP() []byte {
	file_duo_proto_rawDescOnce.Do(func() {
		file_duo_proto_rawDescData = protoimpl.X.CompressGZIP(file_duo_proto_rawDescData)
	})
	return file_duo_proto_rawDescData
}

var file_duo_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_duo_proto_goTypes = []interface{}{
	(*VideoRequest)(nil),  // 0: hello_grpc.VideoRequest
	(*VideoResponse)(nil), // 1: hello_grpc.VideoResponse
	(*OrderRequest)(nil),  // 2: hello_grpc.OrderRequest
	(*OrderResponse)(nil), // 3: hello_grpc.OrderResponse
}
var file_duo_proto_depIdxs = []int32{
	0, // 0: hello_grpc.VideoServer.Look:input_type -> hello_grpc.VideoRequest
	2, // 1: hello_grpc.OrderServer.Buy:input_type -> hello_grpc.OrderRequest
	1, // 2: hello_grpc.VideoServer.Look:output_type -> hello_grpc.VideoResponse
	3, // 3: hello_grpc.OrderServer.Buy:output_type -> hello_grpc.OrderResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_duo_proto_init() }
func file_duo_proto_init() {
	if File_duo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_duo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_duo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_duo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_duo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_duo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_duo_proto_goTypes,
		DependencyIndexes: file_duo_proto_depIdxs,
		MessageInfos:      file_duo_proto_msgTypes,
	}.Build()
	File_duo_proto = out.File
	file_duo_proto_rawDesc = nil
	file_duo_proto_goTypes = nil
	file_duo_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VideoServerClient is the client API for VideoServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VideoServerClient interface {
	Look(ctx context.Context, in *VideoRequest, opts ...grpc.CallOption) (*VideoResponse, error)
}

type videoServerClient struct {
	cc grpc.ClientConnInterface
}

func NewVideoServerClient(cc grpc.ClientConnInterface) VideoServerClient {
	return &videoServerClient{cc}
}

func (c *videoServerClient) Look(ctx context.Context, in *VideoRequest, opts ...grpc.CallOption) (*VideoResponse, error) {
	out := new(VideoResponse)
	err := c.cc.Invoke(ctx, "/hello_grpc.VideoServer/Look", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VideoServerServer is the server API for VideoServer service.
type VideoServerServer interface {
	Look(context.Context, *VideoRequest) (*VideoResponse, error)
}

// UnimplementedVideoServerServer can be embedded to have forward compatible implementations.
type UnimplementedVideoServerServer struct {
}

func (*UnimplementedVideoServerServer) Look(context.Context, *VideoRequest) (*VideoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Look not implemented")
}

func RegisterVideoServerServer(s *grpc.Server, srv VideoServerServer) {
	s.RegisterService(&_VideoServer_serviceDesc, srv)
}

func _VideoServer_Look_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServerServer).Look(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hello_grpc.VideoServer/Look",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServerServer).Look(ctx, req.(*VideoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VideoServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hello_grpc.VideoServer",
	HandlerType: (*VideoServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Look",
			Handler:    _VideoServer_Look_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "duo.proto",
}

// OrderServerClient is the client API for OrderServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServerClient interface {
	Buy(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderResponse, error)
}

type orderServerClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderServerClient(cc grpc.ClientConnInterface) OrderServerClient {
	return &orderServerClient{cc}
}

func (c *orderServerClient) Buy(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderResponse, error) {
	out := new(OrderResponse)
	err := c.cc.Invoke(ctx, "/hello_grpc.OrderServer/Buy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServerServer is the server API for OrderServer service.
type OrderServerServer interface {
	Buy(context.Context, *OrderRequest) (*OrderResponse, error)
}

// UnimplementedOrderServerServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServerServer struct {
}

func (*UnimplementedOrderServerServer) Buy(context.Context, *OrderRequest) (*OrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Buy not implemented")
}

func RegisterOrderServerServer(s *grpc.Server, srv OrderServerServer) {
	s.RegisterService(&_OrderServer_serviceDesc, srv)
}

func _OrderServer_Buy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServerServer).Buy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hello_grpc.OrderServer/Buy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServerServer).Buy(ctx, req.(*OrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hello_grpc.OrderServer",
	HandlerType: (*OrderServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Buy",
			Handler:    _OrderServer_Buy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "duo.proto",
}
